name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  config:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest


    steps:
    - name: Checkout the Repository Code
      uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: upload data
      uses: actions/upload-artifact@v3
      with:
        name: project after build
        path: ${{github.workspace}}/
  build:
    runs-on: ubuntu-latest
    needs: [ config ]
    steps:
    - name: download data
      uses: actions/download-artifact@v3
      with:
        name: project after build
        path: ${{github.workspace}}/

    - name: Build
      # working-directory: ${{github.workspace}}/build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    # - name: Run
    #   working-directory: ${{github.workspace}}/build/App 
    #   run: ./Adaptive_Platform
    
    - name: upload data
      uses: actions/upload-artifact@v3
      with:
        name: project after build
        path: ${{github.workspace}}/
    
    # commit the changes to build branch
    - name: Commit changes
      uses: EndBug/add-and-commit@v7
      with:
        author_name: ${{ github.actor }}
        author_email: ${{ github.actor }}@users.noreply.github.com
        message: 'build'
        add: ${{github.workspace}}/
        branch: build

    # - name: Test
    #   working-directory: ${{github.workspace}}/build/Testing
    #   run: ./Adaptive_Platform-ut

  web_generate:
    name: Generate The dodumentationon the website
    runs-on: ubuntu-latest
    # needs: [ build ]
    steps:
    - name: Checkout the Repository Code
      uses: actions/checkout@v2
      # Generate Doxygen code dodumentation and publish it to the GitHub Pages
    - name: Start Generating
      uses: langroodi/doxygenize@v1
      with:
        doxygenconf: './doc/doxygen.conf'
        htmloutput: './doc/html/'
        darkmode: true

