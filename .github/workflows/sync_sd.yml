# name: SD_Branch

# on:
#   push:
#     branches: [ sync_sd ]
#   pull_request:
#     branches: [ sync_sd ]

# env:
#   # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
#   BUILD_TYPE: Debug

# jobs:
#   build:
#     # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
#     # You can convert this to a matrix build if you need cross-platform coverage.
#     # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
#     runs-on: ubuntu-latest


#     steps:
#     - uses: actions/checkout@v2


#     - name: Configure CMake
#       # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
#       # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
#       run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      
#     # - name: Configure
#     #   run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}}
      
#     - name: Build
#       # working-directory: ${{github.workspace}}/build
#       # Build your program with the given configuration
#       run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
#     - name: Run
#       working-directory: ${{github.workspace}}/build/App 
#       run: ./Adaptive_Platform
#     # - name: Upload result 
#     #   uses: actions/upload-artifact@v2
#     #   with:
#     #     name: buildfiles
#     #     path: ${{github.workspace}}/build
#     - name: Test
#       working-directory: ${{github.workspace}}/build/Testing
#       run: ./Adaptive_Platform-ut



